/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: Control Concepts, Inc.
Programmer: MFS
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/

#SYMBOL_NAME "Lutron Athena Area Scene Control v1.2"


#CATEGORY "0" 

#DEFINE_CONSTANT MAX_SCENES 17

#DIGITAL_EXPAND InputsWithParams

#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
#USER_SIMPLSHARP_LIBRARY "Lutron.Leap.CommLib"

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/

DIGITAL_INPUT _SKIP_, _SKIP_; 
DIGITAL_INPUT _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_; 
DIGITAL_INPUT Recall_Scene[MAX_SCENES];


DIGITAL_OUTPUT _SKIP_, _SKIP_;
DIGITAL_OUTPUT Is_Initialized;
DIGITAL_OUTPUT _SKIP_;
DIGITAL_OUTPUT Room_Is_Occupied, Room_Is_Vacant;

/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/

INTEGER_PARAMETER Command_Processor_ID;
LONG_INTEGER_PARAMETER Area_Href_ID;
LONG_INTEGER_PARAMETER _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_;
LONG_INTEGER_PARAMETER Preset_Href_ID[17];

/*******************************************************************************************
  Parameter Properties
  (Uncomment and declare parameter properties as needed)
*******************************************************************************************/
#BEGIN_PARAMETER_PROPERTIES Area_Href_ID, Preset_Href_ID
   propValidUnits = unitDecimal;
   propDefaultUnit = unitDecimal;
   propDefaultValue = 0d;
#END_PARAMETER_PROPERTIES

#BEGIN_PARAMETER_PROPERTIES Command_Processor_ID
   propValidUnits = unitDecimal;
   propDefaultUnit = unitDecimal;
   propBounds = 0d , 10d;
   propDefaultValue = 1d;
#END_PARAMETER_PROPERTIES


/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
AreaComponent component;

/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
EVENTHANDLER OnInitializationChange(AreaComponent sender, InitializationEventArgs args)
{
	Is_Initialized = args.Payload;
}
             

EVENTHANDLER OnOccupancyChange(AreaComponent sender, OccupiedEventArgs args)
{
	Room_Is_Occupied = (args.Payload = OccupiedStateTypes.Occupied);
	Room_Is_Vacant = (args.Payload = OccupiedStateTypes.Unoccupied);
}

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/
PUSH Recall_Scene
{
	INTEGER preset;

	preset = GetLastModifiedArrayIndex();

	component.RecallPreset(preset);
}

/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{
	INTEGER preset;

	WaitForInitializationComplete();

	RegisterEvent(component, OnInitializationChange, OnInitializationChange);
	RegisterEvent(component, OnOccupancyChange, OnOccupancyChange);

	for (preset = 1 to MAX_SCENES)
		component.AddPreset(preset, Preset_Href_ID[preset]);

	component.Configure(Command_Processor_ID, Area_Href_ID);
}

